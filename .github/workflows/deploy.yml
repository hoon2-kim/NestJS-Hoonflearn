name: 배포

on:
  # pull_request:
  #   branches:
  #     - master
  #   types: [closed]
  push:
    branches:
      - develop

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 확인
        uses: actions/checkout@v3

      - name: AWS 자격 증명
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 도커 이미지 빌드, ECR 푸시
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hoonflearn
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: ssh로 EC2 접속 및 배포
        uses: appleboy/ssh-action@v1.0.3
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hoonflearn
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
          script: |
            CONTAINER_IDS=$(sudo docker ps -a -q)
            if [ ! -z "$CONTAINER_IDS" ]
            then
              for id in $CONTAINER_IDS
              do
                sudo docker stop "$id" && sudo docker rm "$id"
              done
            fi

            IMAGE_IDS=$(sudo docker images -q)
            if [ ! -z "$IMAGE_IDS" ]
            then
              for id in $IMAGE_IDS
              do
                sudo docker rmi $id
              done
            fi

            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

            sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            sudo docker run -d --env-file ./.env -p 8080:8080 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

# -z : 변수가 비어있다면 true

